---
import Layout from "../layouts/Layout.astro";
import "video.js/dist/video-js.css";
---

<Layout title="Sharer">
    <main>
        <h1>Welcome to <span class="text-gradient">A tua mae</span></h1>

        <h2 id="peer-id">My Peer ID:</h2>

        <video
            id="local-video"
            class="video-js vjs-big-play-centered"
            controls
            preload="auto"
            data-setup="{}"
            autoplay></video>
    </main>
</Layout>

<script>
    import Peer from "peerjs";

    const peer = new Peer();

    const peerId = document.getElementById("peer-id");
    peer.on("open", (id) => {
        peerId!.textContent = `My Peer ID: ${id}`;
    });

    peer.on("connection", async (conn) => {
        const stream = await navigator.mediaDevices.getDisplayMedia({
            video: {
                width: { max: 2560 },
                height: { max: 1440 },
                frameRate: { ideal: 60, max: 165 },
            },
            audio: true,
        });

        peer.call(conn.peer, stream);

        const videoElement = document.getElementById(
            "local-video",
        ) as HTMLVideoElement;
        videoElement.srcObject = stream;
        videoElement.play();
    });
</script>

<style>
    main {
        margin: auto;
        padding: 1rem;
        width: 800px;
        max-width: calc(100% - 2rem);
        color: white;
        font-size: 20px;
        line-height: 1.6;
    }
    .astro-a {
        position: absolute;
        top: -32px;
        left: 50%;
        transform: translatex(-50%);
        width: 220px;
        height: auto;
        z-index: -1;
    }
    h1 {
        font-size: 4rem;
        font-weight: 700;
        line-height: 1;
        text-align: center;
        margin-bottom: 1em;
    }
    .text-gradient {
        background-image: var(--accent-gradient);
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        background-size: 400%;
        background-position: 0%;
    }
    .instructions {
        margin-bottom: 2rem;
        border: 1px solid rgba(var(--accent-light), 25%);
        background: linear-gradient(
            rgba(var(--accent-dark), 66%),
            rgba(var(--accent-dark), 33%)
        );
        padding: 1.5rem;
        border-radius: 8px;
    }
    .instructions code {
        font-size: 0.8em;
        font-weight: bold;
        background: rgba(var(--accent-light), 12%);
        color: rgb(var(--accent-light));
        border-radius: 4px;
        padding: 0.3em 0.4em;
    }
    .instructions strong {
        color: rgb(var(--accent-light));
    }
    .link-card-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(24ch, 1fr));
        gap: 2rem;
        padding: 0;
    }

    video {
        width: 100%;
        height: auto;
        border-radius: 8px;
    }
</style>
